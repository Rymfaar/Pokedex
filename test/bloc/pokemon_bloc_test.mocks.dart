// Mocks generated by Mockito 5.4.2 from annotations
// in pokedex/test/bloc/pokemon_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/modules/pokemon/models/pokemon_model.dart' as _i4;
import 'package:pokedex/pokemon/repository/pokemon_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonDataProvider_0 extends _i1.SmartFake
    implements _i2.PokemonDataProvider {
  _FakePokemonDataProvider_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i2.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonDataProvider get pokemonDataProvider => (super.noSuchMethod(
        Invocation.getter(#pokemonDataProvider),
        returnValue: _FakePokemonDataProvider_0(
          this,
          Invocation.getter(#pokemonDataProvider),
        ),
      ) as _i2.PokemonDataProvider);
  @override
  _i3.Future<List<_i4.Pokemon>> fetchPokemons() => (super.noSuchMethod(
        Invocation.method(
          #fetchPokemons,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Pokemon>>.value(<_i4.Pokemon>[]),
      ) as _i3.Future<List<_i4.Pokemon>>);
}
